name: Update Fixtures Database

on:
  pull_request:
    branches:
      - database-update
    paths:
      - 'Fixtures/**/*.json'
    types:
      - closed


jobs:
  updateDB:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Install Pymongo
        run: pip install pymongo

      - name: Install jq
        run: sudo apt-get install jq

      - name: Filter merged JSON files
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            json:
              - 'Fixtures/**/*.json'
          list-files: "json"

      - name: Debug JSON files output
        if: steps.filter.outputs.json != ''
        run: echo '${{ steps.filter.outputs.json_files }}'

      - name: Update Fixtures Database
        if: steps.filter.outputs.json != ''
        id: update
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: |
          json_files=$(echo '${{ steps.filter.outputs.json_files }}' | jq -r '.[]')
          for file in $json_files; do
            python tests/update_db.py "$file" Fixtures-test
          done
        shell: bash

      - name: Comment on PR with update results
        if: steps.filter.outputs.json != ''
        uses: mshick/add-pr-comment@v2
        with:
          message-path: update_output.md

      - name: Create branch and commit changes
        if: 
        run: |
          git config --global user.name "Database Update Bot"
          git config --global user.email "youremail@example.com"
          git checkout -b new-ids
          for file in new-ids.txt; do
            git add $file
          done
          git commit -m "Update Fixtures database"
          git push origin new-ids
        shell: bash